<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2022, 2024 Contributors to Eclipse Foundation.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ee4j.tck.authentication</groupId>
        <artifactId>spi</artifactId>
        <version>3.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>spi.soap</artifactId>
    <packaging>war</packaging>

    <name>Jakarta Authentication TCK - Profile SPI SOAP</name>
    <description>
        A lot of tests about the nitty gritty regarding the SPI per profile.
    </description>

    <dependencies>
        <dependency>
            <groupId>org.jakartaee</groupId>
            <artifactId>jaspic-common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ee4j.tck.authentication</groupId>
            <artifactId>spi.common</artifactId>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>jakarta.jws</groupId>
            <artifactId>jakarta.jws-api</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.metro</groupId>
            <artifactId>webservices-rt</artifactId>
            <version>4.0.3</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.ws</groupId>
            <artifactId>jakarta.xml.ws-api</artifactId>
            <version>4.0.2</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.soap</groupId>
            <artifactId>jakarta.xml.soap-api</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.2</version>
        </dependency>
    </dependencies>
    
    <build>
        <finalName>spitests_servlet_web</finalName>
        <plugins>
            <plugin>
                <!-- wsimport for web service classes generation -->
                <groupId>com.sun.xml.ws</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>4.0.2</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <!-- 
                                Generates JAX-WS portable artifacts used in JAX-WS clients and services. 
                                This goal reads WSDL files and generates the required artifacts for web service development, 
                                deployment, and invocation. 
                            -->
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <packageName>ee.jakarta.tck.authentication.test.basic.soap</packageName>

                            <!-- For convenience, use a pre-copied wsdl file instead of requesting it from the server -->
                            <wsdlFiles>
                                <wsdlFile>${basedir}/src/main/webapp/WEB-INF/HelloService.wsdl</wsdlFile>
                            </wsdlFiles>
                            <!-- Set the location in the generated Java files as-if we had fetched the wsdl file from the server -->
                            <wsdlLocation>http://localhost:8080/spitests_servlet_web/HelloService?wsdl</wsdlLocation>
                            
                            <verbose>true</verbose>
                            <sourceDestDir>${basedir}/src/main/java</sourceDestDir>
                            <target>3.0</target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skipSOAP}</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
