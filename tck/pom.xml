<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2022, 2025 Contributors to Eclipse Foundation. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ee4j</groupId>
        <artifactId>project</artifactId>
        <version>1.0.9</version>
        <relativePath/>
    </parent>

    <groupId>org.eclipse.ee4j.tck.authentication</groupId>
    <artifactId>jakarta-authentication-tck</artifactId>
    <version>3.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Jakarta Authentication TCK - main</name>

    <modules>
        <!-- Not a module with tests, but contains common code for the other modules -->
        <module>common</module>

        <!-- Tests a simple authentication from both public and protected resources -->
        <module>basic-authentication</module>
        
        <!-- Variant of basic-authentication that tests whether a custom principal that's set by a SAM is available
             in a Servlet via HttpServletRequest#getUserPrincipal
         -->
        <module>custom-principal</module>
        
        <!-- Tests a simple authentication like basic-authentication, but uses
             request.authenticate instead of the authentication prior to invoking
             the resource.
         -->
        <module>programmatic-authentication</module>

        <!-- Tests that the main methods of Jakarta Authentication artifacts like the SAM are called by the container at the right moment -->
        <module>lifecycle</module>
        
        <!-- Like Jakarta Servlet filters, a Jakarta Authentication SAM for the Servlet Profile can wrap the request and response. This tests that 
            this indeed happens. 
        -->
        <module>wrapping</module>
        
         <!-- Jakarta Authentication is normally stateless but it can semi-transparently 
             remember an authenticated identity (semi, because the SAM will still be called and has to explicitly
             indicate it wants to continue this remembered session). This tests that remembering a session indeed works.
         -->
        <module>register-session</module>
        
         <!-- Tests behavior of authentication involving asynchronous requests -->
        <module>async-authentication</module>
        
        <!-- Tests that a SAM is able to set a status code into the response -->
        <module>status-codes</module>
        
         <!-- Like a Servlet a Jakarta Authentication SAM for the Servlet Profile can dispatch a request via a forward or include. This tests that 
            this is indeed possible by using plain Servlets and nothing else. -->
        <module>dispatching</module>
        
        <!-- Like a Servlet a Jakarta Authentication SAM for the Servlet Profile can dispatch a request via a forward or include. This tests that 
            this is indeed possible by using Servlets that are injected with a CDI bean and Jakarta Faces views. -->
        <module>dispatching-jsf-cdi</module>
        
        <!-- Tests that an established authenticated identity by Jakarta Authentication propagates correctly to the Enterprise Beans layer -->
        <module>ejb-propagation</module>
        
        <!-- Tests that an established authenticated identity by Jakarta Authentication via the register session feature propagates 
            correctly to the Enterprise Beans layer -->
        <module>ejb-register-session</module>
        
        <!-- Tests that an established authenticated identity by Jakarta Authentication propagates correctly to a Jakarta Authorization provider -->
        <module>jacc-propagation</module>
        
        <!-- Tests that a SAM is able to invoke Enterprise beans and CDI beans. 
        -->
        <module>invoke-ejb-cdi</module>
        
        <!-- 
            A different type of test from the above modules. This one uses a very eleborate custom tracing AuthConfgFactory
            which vends different artefacts that all do their own tracing. Traces are written to a special file, and
            the test client inspects that file for specific behaviour.
        
         -->
        <module>spi</module>
        
        <!-- 
            Tests that the signature of the API jar in the compatible implementation matches a previously
            recorded signature.
        -->
        <module>authentication-signaturetest</module>
        
    </modules>

    <properties>
        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Tests to skip interactions with certain technologies if not appropriate for an environment -->
        <skipEJB>false</skipEJB>
        <skipCDI>false</skipCDI>
        <skipJSF>false</skipJSF>
        <skipJACC>false</skipJACC>
        <skipSOAP>false</skipSOAP>

        <resultlistener.home>${maven.multiModuleProjectDirectory}/target</resultlistener.home>
        <maven.test.skip>false</maven.test.skip>
        <skipTests>false</skipTests>
        
        <jakarta.authentication.version>3.1.0</jakarta.authentication.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.10.0.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-container-test-api</artifactId>
                <version>1.10.0.Final</version>
            </dependency>
            <dependency>
                <groupId>ee.omnifish.arquillian</groupId>
   			    <artifactId>glassfish-client-ee10</artifactId>
                <version>2.1.1</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.authentication</groupId>
            <artifactId>jakarta.authentication-api</artifactId>
            <version>${jakarta.authentication.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>jakarta.authorization</groupId>
            <artifactId>jakarta.authorization-api</artifactId>
            <version>3.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <version>6.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>4.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>3.1.1</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>3.0.0</version>
            <scope>provided</scope>
        </dependency>


        <!-- Test dependencies which can be used in sub-modules -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <version>3.3.4</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
            <version>3.3.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>4.16.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>junit-result-listener</artifactId>
            <version>1.0</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>jakarta-staging</id>
            <snapshots />
            <url>https://jakarta.oss.sonatype.org/content/repositories/staging</url>
        </repository>
    </repositories>

    <build>
        <finalName>${project.artifactId}</finalName>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.14.0</version>
				</plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.5.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.12.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
             <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.8.6</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <attachClasses>true</attachClasses>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.4</version>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                    <properties>
                        <!-- 
                            From org.omnifaces:junit-result-listener. Keeps track of junit results in
                            multi-maven project. Default is to only print results per module.
                         -->
                        <property>
                            <name>listener</name>
                            <value>org.omnifaces.junit.ResultListener</value>
                        </property>
                    </properties>
                    <systemPropertyVariables>
                        <resultlistener.home>${resultlistener.home}</resultlistener.home>
                        <!-- 
                            Don't print results in the listener, since it will show up too early in the log.
                            We use the groovy-maven-plugin defined below to print in the verify phase.
                         -->
                        <resultlistener.print>false</resultlistener.print>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <id>print-test-result</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <classpathScope>runtime</classpathScope>
                            <source>
                                System.setProperty("resultlistener.home", "${resultlistener.home}")
                                org.omnifaces.junit.ResultPrinter.printResult();
                              </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.5.4</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <linkXRef>true</linkXRef>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <!-- Profiles for the application servers against which the tests are run -->
    <profiles>

        <profile>
            <id>custom</id>
        </profile>


        <!-- ### GlassFish ### -->

        <profile>
            <id>glassfish-ci-managed</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <glassfish.version>8.0.0-SNAPSHOT</glassfish.version>
                <glassfish.root>${maven.multiModuleProjectDirectory}/target</glassfish.root>
                
                <authentication.api.update>false</authentication.api.update>
                
                <epicyro.update>false</epicyro.update>
                <epicyro.version>3.1.0</epicyro.version>
                
                <!--
                    Exact artefact used by GlassFish that holds the API classes. The actual API
                    jar in the GlassFish root folder is installed to these coordinates below.
                    This is used by the signature test in module /authentication-signaturetest 
                -->
                <sigtest.api.groupId>jakarta.authentication</sigtest.api.groupId>
                <sigtest.api.artifactId>jakarta.authentication-vendor-api</sigtest.api.artifactId>
                <sigtest.api.version>${glassfish.version}</sigtest.api.version>
            </properties>

            <dependencies>
                <!-- The actual Arquillian connector -->
                <dependency>
                    <groupId>ee.omnifish.arquillian</groupId>
                    <artifactId>arquillian-glassfish-server-managed</artifactId>
                    <version>2.1.1</version>
                    <scope>test</scope>
                </dependency>

                <!-- For the unit tests in /spi/ to be able to instantiate vendor AuthConfigFactory -->
                <dependency>
                    <groupId>org.glassfish.epicyro</groupId>
                    <artifactId>epicyro</artifactId>
                    <version>${epicyro.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${glassfish.root}</outputDirectory>
                                    <markersDirectory>${glassfish.root}/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.glassfish.main.distributions</groupId>
                                            <artifactId>glassfish</artifactId>
                                            <version>${glassfish.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${glassfish.root}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <!--
                        Installs the jakarta.authentication-api.jar from GF on the filesystem to the
                        coordinates expected by the signature test. 
                    -->
                    <plugin>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>3.1.4</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                                <configuration>
                                    <file>${glassfish.root}/glassfish8/glassfish/modules/jakarta.authentication-api.jar</file>
                                    <groupId>${sigtest.api.groupId}</groupId>
                                    <artifactId>${sigtest.api.artifactId}</artifactId>
                                    <version>${sigtest.api.version}</version>
                                    <packaging>jar</packaging>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <plugin>
                         <artifactId>maven-surefire-plugin</artifactId>
                         <configuration>
                             <additionalClasspathElements>
                                <additionalClasspathElement>
                                    ${glassfish.root}/glassfish8/glassfish/lib/bootstrap/glassfish-jul-extension.jar
                                </additionalClasspathElement>
                                <additionalClasspathElement>
                                    ${glassfish.root}/glassfish8/glassfish/modules/webservices.security.jar
                                </additionalClasspathElement>
                                <useManifestOnlyJar>false</useManifestOnlyJar>  
                                <useSystemClassLoader>false</useSystemClassLoader>
                            </additionalClasspathElements>
                             
                             <systemPropertyVariables>
                                 <provider.configuration.file>${maven.multiModuleProjectDirectory}/spi/common/ProviderConfiguration.xml</provider.configuration.file>
                                 <vendor.authconfig.factory>org.glassfish.epicyro.config.factory.file.AuthConfigFileFactory</vendor.authconfig.factory>
                                 <log.file.name.test>authentication-tck-test.log</log.file.name.test>
                                 <log.file.name.webapp>authentication-tck-webapp.log</log.file.name.webapp>
                                 <log.file.location>${glassfish.root}/glassfish8/glassfish/domains/domain1/logs</log.file.location>
                                 <logical.hostname.servlet>server</logical.hostname.servlet>

                                 <glassfish.systemProperties>
                                    j2eelogin.name=j2ee
                                    j2eelogin.password=j2ee
                                    provider.configuration.file=${maven.multiModuleProjectDirectory}/spi/common/ProviderConfiguration.xml
                                    vendor.authconfig.factory=org.glassfish.epicyro.config.factory.file.AuthConfigFileFactory
                                    log.file.location=${glassfish.root}/glassfish8/glassfish/domains/domain1/logs
                                    log.file.name.webapp=authentication-tck-webapp.log
                                 </glassfish.systemProperties>
                                 <glassfish.home>${glassfish.root}/glassfish8</glassfish.home>
                             </systemPropertyVariables>
                         </configuration>
                         <executions>
                            <execution>
                                <id>default-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/*UnitTest.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>integration-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <excludes>
                                        <exclude>**/*UnitTest.java</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                         </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>payara-ci-managed</id>
            <properties>
                <payara.root>${maven.multiModuleProjectDirectory}/target</payara.root>
                <payara.version>6.2022.1.Alpha3-SNAPSHOT</payara.version>
                <payara.arquillian.container.version>3.0.alpha3</payara.arquillian.container.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-managed</artifactId>
                    <version>${payara.arquillian.container.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee9</artifactId>
                    <scope>test</scope>
                    <version>${payara.arquillian.container.version}</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${payara.root}</outputDirectory>
                                    <markersDirectory>${payara.root}/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.distributions</groupId>
                                            <artifactId>payara</artifactId>
                                            <version>${payara.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${payara.root}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <payara.home>${payara.root}/payara6</payara.home>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- 
            The profiles for Tomcat and Piranha are currently out of date and don't' work.
            They are here as starter for future working profiles.
        -->


        <!-- ### PIRANHA ### -->

        <profile>
            <id>piranha-embedded-micro</id>
            
            <properties>
                <piranha.version>22.4.0</piranha.version>
            </properties>

            <dependencies>
                <!-- Java EE based client dependencies to contact a server via WebSocket or REST -->
                <dependency>
                    <groupId>org.omnifaces.arquillian</groupId>
    				<artifactId>glassfish-client-ee9</artifactId>
                    <scope>test</scope>
                </dependency>

                <dependency>
                    <groupId>cloud.piranha.arquillian</groupId>
                    <artifactId>piranha-arquillian-server</artifactId>
                    <version>${piranha.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <piranha.offline>true</piranha.offline>
                                <piranha.async.timeout>1000</piranha.async.timeout>
                                <trimStackTrace>false</trimStackTrace>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <!-- ### TOMCAT ### -->

        <profile>
            <id>tomcat-remote</id>

            <properties>
                <skipEJB>true</skipEJB>
                <skipCDI>true</skipCDI>
                <skipJSF>true</skipJSF>
                <skipJACC>true</skipJACC>
                <skipSOAP>true</skipSOAP>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-tomcat-remote-7</artifactId>
                    <version>1.2.0.Alpha1</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>tomcat-remote</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
       
        <profile>
            <id>tomcat-ci-managed</id>

            <properties>
                <tomcat.version>10.1.0-M14</tomcat.version>
                
                <skipEJB>true</skipEJB>
                <skipCDI>true</skipCDI>
                <skipJSF>true</skipJSF>
                <skipJACC>true</skipJACC>
                <skipSOAP>true</skipSOAP>
            </properties>

            <repositories>
                <!-- Released versions of Tomcat -->
                <repository>
                    <id>apache.public</id>
                    <url>https://repository.apache.org/content/repositories/public/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>

                <!-- About to be released version of Tomcat -->
                <repository>
                    <id>apache.staging</id>
                    <url>https://repository.apache.org/content/repositories/staging/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>

            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-tomcat-managed-8</artifactId>
                    <version>1.2.0.Alpha1</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-tomcat</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.apache.tomcat</groupId>
                                            <artifactId>tomcat</artifactId>
                                            <version>${tomcat.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-tomcat-users</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jakartaee</groupId>
                                            <artifactId>jaspic-common</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/apache-tomcat-${tomcat.version}/conf</outputDirectory>
                                            <includes>tomcat-users.xml</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>tomcat-ci-managed</arquillian.launch>
                                <arquillian.tomcat.catalinaHome>${project.build.directory}/apache-tomcat-${tomcat.version}</arquillian.tomcat.catalinaHome>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>skipTests</id>
            <activation>
                <property>
                    <name>skipTests</name>
                </property>
            </activation>

            <properties>
                <skipEJB>true</skipEJB>
                <skipCDI>true</skipCDI>
                <skipJSF>true</skipJSF>
                <skipJACC>true</skipJACC>
                <skipSOAP>true</skipSOAP>

                <maven.test.skip>true</maven.test.skip>
                <skipTests>true</skipTests>
            </properties>
        </profile>
        
        <profile>
            <id>only-eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>
                                                    org.apache.maven.plugins
                                                </groupId>
                                                <artifactId>
                                                    maven-dependency-plugin
                                                </artifactId>
                                                <versionRange>
                                                    [3.1.2,)
                                                </versionRange>
                                                <goals>
                                                    <goal>unpack</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore></ignore>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
